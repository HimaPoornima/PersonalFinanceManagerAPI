/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.javaj2eefsd.workshop.api;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.javaj2eefsd.workshop.model.Profile;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-06-06T07:36:56.089+05:30")

@Api(value = "profile", description = "the profile API")
public interface ProfileApi {

    @ApiOperation(value = "edit profile details.", nickname = "editProfileByEmailId", notes = "Edit details like emailId, firstName, lastName, phone#, companyName, profilePic are the required fields.", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "user profile information successfully added to database.") })
    @RequestMapping(value = "/profile/edit",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> editProfileByEmailId(@ApiParam(value = "editprofile object to add to database." ,required=true )  @Valid @RequestBody Profile body) throws Exception;


    @ApiOperation(value = "Get profile details of user", nickname = "getProfileByEmailId", notes = "fetch profile information by specifying an emailId.", response = Profile.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "user profile information successfully retrieved.", response = Profile.class) })
    @RequestMapping(value = "/{emailId}/profile",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Profile> getProfileByEmailId(@ApiParam(value = "email id of user for whom information is to be retrieved.",required=true) @PathVariable("emailId") String emailId);

}
